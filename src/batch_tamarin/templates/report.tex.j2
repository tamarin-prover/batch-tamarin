\documentclass[11pt,a4paper]{article}

% Required packages
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{geometry}
\usepackage{booktabs}
\usepackage{longtable}
\usepackage{array}
\usepackage{xcolor}
\usepackage{graphicx}
\usepackage{float}
\usepackage{pgfplots}
\usepackage{pgf-pie}
\usepackage{pgfgantt}
\usepackage{hyperref}
\usepackage{fancyhdr}
\usepackage{amsmath}
\usepackage{enumitem}
\usepackage{caption}
\usepackage{listings}
\usepackage{textcomp}

% Page setup
\geometry{margin=2.5cm}
\pagestyle{fancy}
\fancyhf{}
\fancyhead[C]{Batch Tamarin Execution Report}
\fancyfoot[C]{\thepage}

% Colors for different status types
\definecolor{successcolor}{RGB}{40,167,69}
\definecolor{failedcolor}{RGB}{236,16,38}
\definecolor{warningcolor}{RGB}{234,148,0}
\definecolor{infocolor}{RGB}{17,109,215}
\definecolor{darkinfocolor}{RGB}{18,0,185}
\definecolor{memorycolor}{RGB}{139,92,246}
\definecolor{falsifiedcolor}{RGB}{230,0,255}
\definecolor{unterminatedcolor}{RGB}{219,193,0}

% pgfplots settings
\pgfplotsset{compat=1.18}
\usepgfplotslibrary{groupplots}

% Custom commands for status styling
\newcommand{\successtext}[1]{\textcolor{successcolor}{#1}}
\newcommand{\failedtext}[1]{\textcolor{failedcolor}{#1}}
\newcommand{\warningtext}[1]{\textcolor{warningcolor}{#1}}
\newcommand{\infotext}[1]{\textcolor{infocolor}{#1}}
\newcommand{\darkinfotext}[1]{\textcolor{darkinfocolor}{#1}}
\newcommand{\memorytext}[1]{\textcolor{memorycolor}{#1}}
\newcommand{\falsifiedtext}[1]{\textcolor{falsifiedcolor}{#1}}
\newcommand{\unterminatedtext}[1]{\textcolor{unterminatedcolor}{#1}}

% Listings configuration for shell output
\lstdefinestyle{shellstyle}{
    backgroundcolor=\color{gray!10},
    commentstyle=\color{green!60!black},
    keywordstyle=\color{blue},
    numberstyle=\tiny\color{gray},
    stringstyle=\color{red!70!black},
    basicstyle=\footnotesize\ttfamily,
    breakatwhitespace=false,
    breaklines=true,
    captionpos=b,
    keepspaces=true,
    numbers=left,
    numbersep=5pt,
    showspaces=false,
    showstringspaces=false,
    showtabs=false,
    tabsize=2,
    frame=single,
    rulecolor=\color{gray!50}
}

\begin{document}

\title{Batch Tamarin Execution Report}
\author{Generated by Batch Tamarin \VAR{version or 'unknown'}}
\date{\VAR{report_data.generation_date.strftime('%Y-%m-%d at %H:%M:%S')}}
\maketitle

\noindent\textbf{Execution results from:} \VAR{results_directory} \\
\textbf{Executed:} \VAR{batch_execution_date.strftime('%Y-%m-%d %H:%M:%S')}

\tableofcontents
\newpage

\section{Overview}

\subsection{Configuration}

\subsubsection{Global Settings}
\begin{table}[H]
\centering
\begin{tabular}{ll}
\toprule
\textbf{Setting} & \textbf{Value} \\
\midrule
Max cores & \VAR{report_data.config.global_max_cores or 'Not specified'} \\
Max memory & \VAR{report_data.config.global_max_memory or 'Not specified'}GB \\
Default timeout & \VAR{report_data.config.default_timeout or 'Not specified'}s \\
\bottomrule
\end{tabular}
\caption{Global Settings}
\end{table}

\subsubsection{Tamarin Versions}
\begin{table}[H]
\centering
\begin{tabular}{lll}
\toprule
\textbf{Alias} & \textbf{Path} & \textbf{Version} \\
\midrule
\BLOCK{for alias, info in report_data.config.tamarin_versions.items()}
\VAR{alias} & \texttt{\VAR{info.path|latex_escape}} & \VAR{info.version} \\
\BLOCK{endfor}
\bottomrule
\end{tabular}
\caption{Tamarin Versions}
\end{table}

\subsection{Global Summary}

\subsubsection{Global Statistics}
\begin{table}[H]
\centering
\begin{tabular}{ll}
\toprule
\textbf{Metric} & \textbf{Value} \\
\midrule
Total Executed Lemmas & \VAR{report_data.statistics.total_lemmas} \\
Verified Lemmas & \successtext{\VAR{report_data.statistics.verified_lemmas} (\VAR{"%.1f"|format(report_data.statistics.verified_percentage)}\%)} \\
Falsified Lemmas & \falsifiedtext{\VAR{report_data.statistics.falsified_lemmas} (\VAR{"%.1f"|format(report_data.statistics.falsified_percentage)}\%)} \\
Unterminated Lemmas & \unterminatedtext{\VAR{report_data.statistics.unterminated_lemmas} (\VAR{"%.1f"|format(report_data.statistics.unterminated_percentage)}\%)} \\
Failed Executions & \failedtext{\VAR{report_data.statistics.failed_lemmas} (\VAR{"%.1f"|format(report_data.statistics.failed_percentage)}\%)} \\
Lemmas killed by timeout & \warningtext{\VAR{report_data.statistics.timeout_lemmas} (\VAR{"%.1f"|format(report_data.statistics.timeout_percentage)}\%)} \\
Lemmas killed for memory limit & \memorytext{\VAR{report_data.statistics.memory_limit_lemmas} (\VAR{"%.1f"|format(report_data.statistics.memory_limit_percentage)}\%)} \\
\midrule
Total runtime & \VAR{"%.1f"|format(report_data.statistics.total_runtime)}s \\
Total peak memory used & \VAR{"%.1f"|format(report_data.statistics.total_memory_usage / 1024)}GB \\
Max peak memory used & \VAR{"%.1f"|format(report_data.statistics.max_memory_usage / 1024)}GB \\
Freshly executed tasks & \darkinfotext{\VAR{report_data.statistics.fresh_executions} (\VAR{"%.1f"|format(report_data.statistics.fresh_percentage)}\%)} \\
Cache hits & \infotext{\VAR{report_data.statistics.cache_hits} (\VAR{"%.1f"|format(report_data.statistics.cache_hit_percentage)}\%)} \\
\bottomrule
\end{tabular}
\caption{Global Statistics}
\end{table}

\subsubsection{Charts}

\#{ Success Rate Pie Chart }
\BLOCK{if report_data.statistics.total_lemmas > 0}
\begin{figure}[H]
\centering
\begin{tikzpicture}
\BLOCK{set pie_data = []}
\BLOCK{if report_data.statistics.verified_percentage > 0}
\BLOCK{set _ = pie_data.append("%.1f"|format(report_data.statistics.verified_percentage) + "/Verified")}
\BLOCK{endif}
\BLOCK{if report_data.statistics.falsified_percentage > 0}
\BLOCK{set _ = pie_data.append("%.1f"|format(report_data.statistics.falsified_percentage) + "/Falsified")}
\BLOCK{endif}
\BLOCK{if report_data.statistics.unterminated_percentage > 0}
\BLOCK{set _ = pie_data.append("%.1f"|format(report_data.statistics.unterminated_percentage) + "/Unterminated")}
\BLOCK{endif}
\BLOCK{if report_data.statistics.failed_percentage > 0}
\BLOCK{set _ = pie_data.append("%.1f"|format(report_data.statistics.failed_percentage) + "/Failed")}
\BLOCK{endif}
\BLOCK{if report_data.statistics.timeout_percentage > 0}
\BLOCK{set _ = pie_data.append("%.1f"|format(report_data.statistics.timeout_percentage) + "/Timeout")}
\BLOCK{endif}
\BLOCK{if report_data.statistics.memory_limit_percentage > 0}
\BLOCK{set _ = pie_data.append("%.1f"|format(report_data.statistics.memory_limit_percentage) + "/Memory Limit")}
\BLOCK{endif}
\pie[
    text=legend,
    radius=3,
    color={successcolor, falsifiedcolor, unterminatedcolor, failedcolor, warningcolor, memorycolor}
]{
\VAR{pie_data|join(', ')}
}
\end{tikzpicture}
\caption{Success Rate}
\end{figure}
\BLOCK{endif}

\#{ Cache Performance Pie Chart }
\begin{figure}[H]
\centering
\begin{tikzpicture}
\pie[
    text=legend,
    radius=3,
    color={infocolor, darkinfocolor}
]{
\VAR{"%.1f"|format(report_data.statistics.cache_hit_percentage)}/Cache Hit,
\VAR{"%.1f"|format(report_data.statistics.fresh_percentage)}/Freshly Executed
}
\end{tikzpicture}
\caption{Cache Performance}
\end{figure}

\#{ Runtime per Task Bar Chart }
\BLOCK{if report_data.tasks|length > 0}
\begin{figure}[H]
\centering
\begin{tikzpicture}
\begin{axis}[
    xbar,
    width=0.8\textwidth,
    height=0.4\textheight,
    xlabel={Runtime (seconds)},
    ylabel={Tasks},
    yticklabel style={font=\small},
    ytick=data,
    yticklabels={
    \BLOCK{for task in report_data.tasks}
    \VAR{task.name[-30:]|latex_escape}\BLOCK{if not loop.last},\BLOCK{endif}
    \BLOCK{endfor}
    },
    nodes near coords,
    nodes near coords align={horizontal},
]
\addplot[fill=blue!70] coordinates {
\BLOCK{for task in report_data.tasks}
    (\VAR{"%.1f"|format(task.total_runtime)}, \VAR{loop.index0})
\BLOCK{endfor}
};
\end{axis}
\end{tikzpicture}
\caption{Runtime per Task}
\end{figure}
\BLOCK{endif}

\#{ Memory per Task Bar Chart }
\BLOCK{if report_data.tasks|length > 0}
\begin{figure}[H]
\centering
\begin{tikzpicture}
\begin{axis}[
    xbar,
    width=0.8\textwidth,
    height=0.4\textheight,
    xlabel={Memory (MB)},
    ylabel={Tasks},
    yticklabel style={font=\small},
    ytick=data,
    yticklabels={
    \BLOCK{for task in report_data.tasks}
    \VAR{task.name[-30:]|latex_escape}\BLOCK{if not loop.last},\BLOCK{endif}
    \BLOCK{endfor}
    },
    nodes near coords,
    nodes near coords align={horizontal},
]
\addplot[fill=orange!70] coordinates {
\BLOCK{for task in report_data.tasks}
    (\VAR{"%.1f"|format(task.peak_memory)}, \VAR{loop.index0})
\BLOCK{endfor}
};
\end{axis}
\end{tikzpicture}
\caption{Memory Usage per Task}
\end{figure}
\BLOCK{endif}

\subsection{Global Results}

\begin{longtable}{p{2.5cm}p{2cm}p{1.8cm}p{1.5cm}p{1.5cm}p{1.8cm}p{1.5cm}}
\toprule
\textbf{Task} & \textbf{Lemma} & \textbf{Version} & \textbf{Status} & \textbf{Runtime} & \textbf{Memory} & \textbf{Cache} \\
\midrule
\endfirsthead
\toprule
\textbf{Task} & \textbf{Lemma} & \textbf{Version} & \textbf{Status} & \textbf{Runtime} & \textbf{Memory} & \textbf{Cache} \\
\midrule
\endhead
\bottomrule
\endfoot
\BLOCK{for task in report_data.tasks}
    \BLOCK{for lemma_group in task.lemma_groups}
        \BLOCK{for result in lemma_group.results}
            \textbf{\VAR{task.name|latex_escape}} &
            \VAR{lemma_group.lemma|latex_escape} &
            \VAR{result.tamarin_version} &
            \BLOCK{if result.status == 'verified'}\successtext{VERIFIED}\BLOCK{elif result.status == 'falsified'}\falsifiedtext{FALSIFIED}\BLOCK{elif result.status == 'unterminated'}\unterminatedtext{UNTERMINATED}\BLOCK{elif result.status == 'timeout'}\warningtext{TIMEOUT}\BLOCK{elif result.status == 'memory_limit'}\memorytext{MEMORY LIMIT}\BLOCK{else}\failedtext{FAILED}\BLOCK{endif} &
            \VAR{"%.1f"|format(result.runtime)}s &
            \VAR{"%.1f"|format(result.peak_memory)}MB &
            \infotext{\BLOCK{if result.cache_hit}CACHED\BLOCK{else}FRESH\BLOCK{endif}} \\
        \BLOCK{endfor}
    \BLOCK{endfor}
\BLOCK{endfor}
\end{longtable}

\subsection{Global Execution Timeline}

\BLOCK{if report_data.tasks|length > 0 and report_data.tasks[0].execution_timeline|length > 0}
\begin{figure}[H]
\centering
\begin{ganttchart}[
    hgrid,
    vgrid,
    x unit=2mm,
    y unit title=7mm,
    y unit chart=5mm,
    title/.append style={fill=gray!50},
    title label font=\footnotesize,
    bar label font=\tiny,
    group label font=\tiny,
    bar/.append style={fill=blue!50},
    bar height=0.6,
    chart element start border=left
]{0}{\VAR{report_data.statistics.total_runtime|int + 5}}

\gantttitle{Global Execution Timeline}{\VAR{report_data.statistics.total_runtime|int + 5}} \\

\BLOCK{set current_task = ""}
\BLOCK{for task in report_data.tasks}
    \BLOCK{if task.execution_timeline|length > 0}
        \BLOCK{if current_task != task.name}
\ganttgroup{\VAR{task.name|latex_escape}}{0}{\VAR{report_data.statistics.total_runtime|int}} \\
            \BLOCK{set current_task = task.name}
        \BLOCK{endif}
        \BLOCK{for item in task.execution_timeline}
\ganttbar{\VAR{item.label[-20:]|latex_escape}}{\VAR{item.start}}{\VAR{item.end}} \\
        \BLOCK{endfor}
    \BLOCK{endif}
\BLOCK{endfor}

\end{ganttchart}
\caption{Global Execution Timeline}
\end{figure}
\BLOCK{endif}

\section{Task Details}

\BLOCK{for task in report_data.tasks}
\subsection{Task: \VAR{task.name|latex_escape}}\label{task:\VAR{task.name|replace(' ', '-')|lower}}

\subsubsection{Execution Summary}

\begin{longtable}{p{2cm}p{2cm}p{1.5cm}p{1.5cm}p{1.5cm}p{1.5cm}p{1.5cm}p{2cm}p{1.5cm}}
\toprule
\textbf{Lemma} & \textbf{Resources config} & \textbf{Options} & \textbf{Preprocessor} & \textbf{Tamarin Version} & \textbf{Status} & \textbf{Runtime} & \textbf{Peak Memory Used} & \textbf{Cache Hit} \\
\midrule
\endfirsthead
\toprule
\textbf{Lemma} & \textbf{Resources config} & \textbf{Options} & \textbf{Preprocessor} & \textbf{Tamarin Version} & \textbf{Status} & \textbf{Runtime} & \textbf{Peak Memory Used} & \textbf{Cache Hit} \\
\midrule
\endhead
\bottomrule
\endfoot
\BLOCK{for lemma_group in task.lemma_groups}
    \BLOCK{set outer_loop = loop}
    \BLOCK{for result in lemma_group.results}
        \BLOCK{if loop.first}
        \VAR{lemma_group.lemma|latex_escape} &
        \VAR{result.cores}c / \VAR{result.memory}GB / \VAR{result.timeout}s &
        \VAR{result.options or "None"} &
        \VAR{result.preprocessor or "None"} &
        \BLOCK{endif}
        \VAR{result.tamarin_version} &
        \BLOCK{if result.status == 'verified'}\successtext{VERIFIED}\BLOCK{elif result.status == 'falsified'}\falsifiedtext{FALSIFIED}\BLOCK{elif result.status == 'unterminated'}\unterminatedtext{UNTERMINATED}\BLOCK{elif result.status == 'timeout'}\warningtext{TIMEOUT}\BLOCK{elif result.status == 'memory_limit'}\memorytext{MEMORY LIMIT}\BLOCK{else}\failedtext{FAILED}\BLOCK{endif} &
        \VAR{"%.2f"|format(result.runtime)}s &
        \VAR{"%.2f"|format(result.peak_memory)}MB &
        \infotext{\BLOCK{if result.cache_hit}CACHED\BLOCK{else}FRESH\BLOCK{endif}} \\
        \BLOCK{if not loop.last or not outer_loop.last}\midrule\BLOCK{endif}
    \BLOCK{endfor}
\BLOCK{endfor}
\end{longtable}

\#{ Version Comparison Charts if multiple versions }
\BLOCK{set task_versions = []}
\BLOCK{for lemma_group in task.lemma_groups}
    \BLOCK{for result in lemma_group.results}
        \BLOCK{if result.tamarin_version not in task_versions}
            \BLOCK{set _ = task_versions.append(result.tamarin_version)}
        \BLOCK{endif}
    \BLOCK{endfor}
\BLOCK{endfor}

\BLOCK{if task_versions|length > 1}
\subsubsection{Version Comparisons}

\#{ Runtime Comparison Chart }
\begin{figure}[H]
\centering
\begin{tikzpicture}
\begin{axis}[
    xbar,
    width=0.9\textwidth,
    height=0.6\textheight,
    xlabel={Runtime (seconds)},
    ylabel={Lemmas},
    legend style={at={(0.5,-0.1)},anchor=north,legend columns=\VAR{task_versions|length}},
    yticklabel style={font=\footnotesize},
    ytick=data,
    yticklabels={
    \BLOCK{for lemma_group in task.lemma_groups}
    \VAR{lemma_group.lemma|latex_escape}\BLOCK{if not loop.last},\BLOCK{endif}
    \BLOCK{endfor}
    },
]

\BLOCK{for version in task_versions}
\BLOCK{set version_idx = loop.index0}
\addplot[fill=blue!\VAR{30 + version_idx * 20}] coordinates {
\BLOCK{for lemma_group in task.lemma_groups}
    \BLOCK{set version_result = lemma_group.results|selectattr('tamarin_version', 'equalto', version)|list}
    (\VAR{version_result[0].runtime if version_result else 0}, \VAR{loop.index0})
\BLOCK{endfor}
};
\addlegendentry{\VAR{version|latex_escape}}
\BLOCK{endfor}

\end{axis}
\end{tikzpicture}
\caption{Runtime Comparison by Version for \VAR{task.name|latex_escape}}
\end{figure}

\#{ Memory Comparison Chart }
\begin{figure}[H]
\centering
\begin{tikzpicture}
\begin{axis}[
    xbar,
    width=0.9\textwidth,
    height=0.6\textheight,
    xlabel={Memory (MB)},
    ylabel={Lemmas},
    legend style={at={(0.5,-0.1)},anchor=north,legend columns=\VAR{task_versions|length}},
    yticklabel style={font=\footnotesize},
    ytick=data,
    yticklabels={
    \BLOCK{for lemma_group in task.lemma_groups}
    \VAR{lemma_group.lemma|latex_escape}\BLOCK{if not loop.last},\BLOCK{endif}
    \BLOCK{endfor}
    },
]

\BLOCK{for version in task_versions}
\BLOCK{set version_idx = loop.index0}
\addplot[fill=orange!\VAR{30 + version_idx * 20}] coordinates {
\BLOCK{for lemma_group in task.lemma_groups}
    \BLOCK{set version_result = lemma_group.results|selectattr('tamarin_version', 'equalto', version)|list}
    (\VAR{version_result[0].peak_memory if version_result else 0}, \VAR{loop.index0})
\BLOCK{endfor}
};
\addlegendentry{\VAR{version|latex_escape}}
\BLOCK{endfor}

\end{axis}
\end{tikzpicture}
\caption{Memory Usage Comparison by Version for \VAR{task.name|latex_escape}}
\end{figure}
\BLOCK{endif}

\#{ Task Timeline if available }
\BLOCK{if task.execution_timeline|length > 0}
\subsubsection{Task Timeline}

\begin{figure}[H]
\centering
\begin{ganttchart}[
    hgrid,
    vgrid,
    x unit=5mm,
    y unit title=6mm,
    y unit chart=4mm,
    title/.append style={fill=gray!30},
    title label font=\small,
    bar label font=\scriptsize,
    bar/.append style={fill=green!40},
    bar height=0.7
]{0}{\VAR{task.total_runtime|int + 2}}

\gantttitle{\VAR{task.name|latex_escape}}{\VAR{task.total_runtime|int + 2}} \\

\BLOCK{for execution in task.execution_timeline}
\ganttbar{\VAR{execution.label[-15:]|latex_escape}}{\VAR{execution.start}}{\VAR{execution.end}} \\
\BLOCK{endfor}

\end{ganttchart}
\caption{Execution Timeline for \VAR{task.name|latex_escape}}
\end{figure}
\BLOCK{endif}

\#{ Traces section }
\BLOCK{set task_traces = report_data.traces|filter_traces_by_task(task)|list}
\BLOCK{if task_traces|length > 0}
\subsubsection{Traces}

\BLOCK{for trace in task_traces}
\paragraph{\VAR{trace.lemma|latex_escape} (\VAR{trace.tamarin_version})}

\textbf{JSON File:} \texttt{\VAR{trace.json_file|latex_escape}}
\BLOCK{if trace.dot_file}
\newline\textbf{DOT File:} \texttt{\VAR{trace.dot_file|latex_escape}}
\BLOCK{endif}

\BLOCK{if trace.png_file}
\begin{figure}[H]
\centering
\includegraphics[width=0.8\textwidth]{\VAR{trace.png_file}}
\caption{Trace visualization for \VAR{trace.lemma|latex_escape}}
\end{figure}
\BLOCK{elif trace.svg_content}
\#{ Note: SVG content cannot be directly embedded in LaTeX, would need conversion }
\textit{SVG trace visualization available (see HTML report for interactive view)}
\BLOCK{endif}

\BLOCK{endfor}
\BLOCK{endif}

\BLOCK{endfor}

\BLOCK{if report_data.has_errors}
\section{Errors}

\#{ Error Types Pie Chart }
\BLOCK{if report_data.error_type_distribution|length > 0}
\begin{figure}[H]
\centering
\begin{tikzpicture}
\BLOCK{set error_pie_data = []}
\BLOCK{for error_type in report_data.error_type_distribution}
\BLOCK{set _ = error_pie_data.append("%.1f"|format(error_type.percentage) + "/" + error_type.name)}
\BLOCK{endfor}
\pie[
    text=legend,
    radius=3,
    color={failedcolor, warningcolor, memorycolor, orange, purple}
]{
\VAR{error_pie_data|join(', ')}
}
\end{tikzpicture}
\caption{Error Types Distribution}
\end{figure}
\BLOCK{endif}

\subsection{Error Summary}

\begin{longtable}{p{2cm}p{1.5cm}p{2cm}p{1.5cm}p{1.5cm}p{1.5cm}p{1.5cm}p{1.5cm}p{2cm}p{3cm}}
\toprule
\textbf{Task} & \textbf{Lemma} & \textbf{Resources config} & \textbf{Options} & \textbf{Preprocessor} & \textbf{Tamarin Version} & \textbf{Error} & \textbf{Runtime} & \textbf{Peak Memory Used} & \textbf{Description} \\
\midrule
\endfirsthead
\toprule
\textbf{Task} & \textbf{Lemma} & \textbf{Resources config} & \textbf{Options} & \textbf{Preprocessor} & \textbf{Tamarin Version} & \textbf{Error} & \textbf{Runtime} & \textbf{Peak Memory Used} & \textbf{Description} \\
\midrule
\endhead
\bottomrule
\endfoot
\BLOCK{for error in report_data.error_summary}
    \BLOCK{set outer_loop = loop}
    \BLOCK{for lemma_error in error.lemma_errors}
        \BLOCK{set middle_loop = loop}
        \BLOCK{for result in lemma_error.results}
            \BLOCK{if loop.first and middle_loop.first}
            \VAR{error.task_name|latex_escape} &
            \BLOCK{endif}
            \BLOCK{if loop.first}
            \VAR{lemma_error.lemma|latex_escape} &
            \VAR{result.cores}c / \VAR{result.memory}GB / \VAR{result.timeout}s &
            \VAR{result.options or "None"} &
            \VAR{result.preprocessor or "None"} &
            \BLOCK{endif}
            \VAR{result.tamarin_version} &
            \BLOCK{if result.error_type == 'tamarin_error'}\failedtext{TAMARIN ERROR}\BLOCK{elif result.error_type == 'timeout'}\warningtext{TIMEOUT}\BLOCK{elif result.error_type == 'memory_limit'}\memorytext{MEMORY LIMIT}\BLOCK{else}\failedtext{ERROR}\BLOCK{endif} &
            \VAR{"%.2f"|format(result.runtime)}s &
            \VAR{"%.2f"|format(result.peak_memory)}MB &
            \VAR{result.error_description or "No description available"|latex_escape} \\
            \BLOCK{if not loop.last or not middle_loop.last or not outer_loop.last}\midrule\BLOCK{endif}
        \BLOCK{endfor}
    \BLOCK{endfor}
\BLOCK{endfor}
\end{longtable}

\subsection{Detailed Error Information}

\BLOCK{for error in report_data.detailed_errors}
\subsubsection*{
\BLOCK{if error.type == 'tamarin_error'}\failedtext{FAILED}\BLOCK{elif error.type == 'timeout'}\warningtext{TIMED OUT}\BLOCK{elif error.type == 'memory_limit'}\memorytext{MEMORY LIMIT}\BLOCK{else}\failedtext{ERROR}\BLOCK{endif}:
\VAR{error.task_name|latex_escape}
}

\textbf{On lemma:} \VAR{error.lemma|latex_escape}, \textbf{with tamarin-prover:} \VAR{error.tamarin_version}

\VAR{error.description|latex_escape}

\BLOCK{if error.stderr_output}
\begin{lstlisting}[style=shellstyle, language=bash, caption=Error Output]
\VAR{error.stderr_output}
\end{lstlisting}
\BLOCK{endif}

\BLOCK{endfor}

\textbf{Rerun file:} \texttt{\VAR{report_data.rerun_file|latex_escape}}

\BLOCK{else}
\section{Execution Summary}

\begin{center}
\successtext{\textbf{No errors occurred during this run}}

All tasks completed successfully without any failures, timeouts, or memory limit issues.
\end{center}
\BLOCK{endif}

\vfill

\begin{center}
\textit{Report generated by Batch Tamarin v\VAR{version or 'unknown'} on \VAR{report_data.generation_date.strftime('%Y-%m-%d at %H:%M:%S')}}
\end{center}

\end{document}
