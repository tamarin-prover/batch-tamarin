\documentclass[11pt,a4paper]{article}

% Required packages
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage[english]{babel}
\usepackage{geometry}
\usepackage{xcolor}
\usepackage{graphicx}
\usepackage{float}
\usepackage{pgfplots}
\usepackage{pgf-pie}
\usepackage{pgfgantt}
\usepackage{hyperref}
\usepackage{fancyhdr}
\usepackage{amsmath}
\usepackage{enumitem}
\usepackage{caption}
\usepackage{listings}
\usepackage{textcomp}
\usepackage[strings]{underscore}
\usepackage{nicematrix}
\NiceMatrixOptions{
  cell-space-top-limit = 3pt,
  cell-space-bottom-limit = 3pt,
  code-for-first-col = \color{blue},
  code-for-first-row = \color{blue}
}

% Page setup
\geometry{margin=2.5cm}
\pagestyle{fancy}
\fancyhf{}
\fancyhead[C]{Batch Tamarin Execution Report}
\fancyfoot[C]{\thepage}


% Colors for different status types
\definecolor{successcolor}{RGB}{40,167,69}
\definecolor{failedcolor}{RGB}{236,16,38}
\definecolor{warningcolor}{RGB}{234,148,0}
\definecolor{infocolor}{RGB}{17,109,215}
\definecolor{darkinfocolor}{RGB}{18,0,185}
\definecolor{memorycolor}{RGB}{139,92,246}
\definecolor{falsifiedcolor}{RGB}{230,0,255}
\definecolor{unterminatedcolor}{RGB}{219,193,0}

% pgfplots settings
\pgfplotsset{compat=1.18}
\usepgfplotslibrary{groupplots}

% Custom commands for status styling
\newcommand{\successtext}[1]{\textcolor{successcolor}{#1}}
\newcommand{\failedtext}[1]{\textcolor{failedcolor}{#1}}
\newcommand{\warningtext}[1]{\textcolor{warningcolor}{#1}}
\newcommand{\infotext}[1]{\textcolor{infocolor}{#1}}
\newcommand{\darkinfotext}[1]{\textcolor{darkinfocolor}{#1}}
\newcommand{\memorytext}[1]{\textcolor{memorycolor}{#1}}
\newcommand{\falsifiedtext}[1]{\textcolor{falsifiedcolor}{#1}}
\newcommand{\unterminatedtext}[1]{\textcolor{unterminatedcolor}{#1}}

% Listings configuration for shell output
\lstdefinestyle{shellstyle}{
    backgroundcolor=\color{gray!10},
    commentstyle=\color{green!60!black},
    keywordstyle=\color{blue},
    numberstyle=\tiny\color{gray},
    stringstyle=\color{red!70!black},
    basicstyle=\footnotesize\ttfamily,
    breakatwhitespace=false,
    breaklines=true,
    captionpos=b,
    keepspaces=true,
    numbers=left,
    numbersep=5pt,
    showspaces=false,
    showstringspaces=false,
    showtabs=false,
    tabsize=2,
    frame=single,
    rulecolor=\color{gray!50}
}

\begin{document}

\title{Batch Tamarin Execution Report}
\author{Generated by Batch Tamarin \VAR{version or 'unknown'}}
\date{\VAR{report_data.generation_date.strftime('%Y-%m-%d at %H:%M:%S')}}
\maketitle

\noindent\textbf{Execution results from:} \VAR{results_directory} \\
\textbf{Executed:} \VAR{batch_execution_date.strftime('%Y-%m-%d %H:%M:%S')}

\newpage
\tableofcontents
\newpage

\section{Overview}

\subsection{Configuration}

\subsubsection{Global Settings}
\begin{table}[H]
\centering
\begin{NiceTabular}{ll}
\hline
\textbf{Setting} & \textbf{Value} \\
\hline
Max cores & \VAR{report_data.config.global_max_cores or 'Not specified'} \\
Max memory & \VAR{report_data.config.global_max_memory or 'Not specified'}GB \\
Default timeout & \VAR{report_data.config.default_timeout or 'Not specified'}s \\
\hline
\end{NiceTabular}
\caption{Global Settings}
\end{table}

\subsubsection{Tamarin Versions}
\begin{table}[H]
\centering
\begin{NiceTabular}{lll}
\hline
\textbf{Alias} & \textbf{Path} & \textbf{Version} \\
\hline
\JBLOCK{for alias, info in report_data.config.tamarin_versions.items()}
\VAR{alias} & \texttt{\VAR{info.path|latex_escape}} & \VAR{info.version} \\
\JBLOCK{endfor}
\hline
\end{NiceTabular}
\caption{Tamarin Versions}
\end{table}

\subsection{Global Summary}

\subsubsection{Global Statistics}
\begin{table}[H]
\centering
\begin{NiceTabular}{ll}
\hline
\textbf{Metric} & \textbf{Value} \\
\hline
Total Executed Lemmas & \VAR{report_data.statistics.total_lemmas} \\
Verified Lemmas & \successtext{\VAR{report_data.statistics.verified_lemmas} (\VAR{"%.1f"|format(report_data.statistics.verified_percentage)}\%)} \\
Falsified Lemmas & \falsifiedtext{\VAR{report_data.statistics.falsified_lemmas} (\VAR{"%.1f"|format(report_data.statistics.falsified_percentage)}\%)} \\
Unterminated Lemmas & \unterminatedtext{\VAR{report_data.statistics.unterminated_lemmas} (\VAR{"%.1f"|format(report_data.statistics.unterminated_percentage)}\%)} \\
Failed Executions & \failedtext{\VAR{report_data.statistics.failed_lemmas} (\VAR{"%.1f"|format(report_data.statistics.failed_percentage)}\%)} \\
Lemmas killed by timeout & \warningtext{\VAR{report_data.statistics.timeout_lemmas} (\VAR{"%.1f"|format(report_data.statistics.timeout_percentage)}\%)} \\
Lemmas killed for memory limit & \memorytext{\VAR{report_data.statistics.memory_limit_lemmas} (\VAR{"%.1f"|format(report_data.statistics.memory_limit_percentage)}\%)} \\
\hline
Total runtime & \VAR{"%.1f"|format(report_data.statistics.total_runtime)}s \\
Total peak memory used & \VAR{"%.1f"|format(report_data.statistics.total_memory_usage / 1024)}GB \\
Max peak memory used & \VAR{"%.1f"|format(report_data.statistics.max_memory_usage / 1024)}GB \\
Freshly executed tasks & \darkinfotext{\VAR{report_data.statistics.fresh_executions} (\VAR{"%.1f"|format(report_data.statistics.fresh_percentage)}\%)} \\
Cache hits & \infotext{\VAR{report_data.statistics.cache_hits} (\VAR{"%.1f"|format(report_data.statistics.cache_hit_percentage)}\%)} \\
\hline
\end{NiceTabular}
\caption{Global Statistics}
\end{table}

\subsubsection{Charts}

\#{ Success Rate Pie Chart }
\JBLOCK{if report_data.statistics.total_lemmas > 0}
\begin{figure}[H]
\centering
\begin{tikzpicture}
\JBLOCK{set pie_data = []}
\JBLOCK{if report_data.statistics.verified_percentage > 0}
\JBLOCK{set _ = pie_data.append("%.1f"|format(report_data.statistics.verified_percentage) + "/Verified")}
\JBLOCK{endif}
\JBLOCK{if report_data.statistics.falsified_percentage > 0}
\JBLOCK{set _ = pie_data.append("%.1f"|format(report_data.statistics.falsified_percentage) + "/Falsified")}
\JBLOCK{endif}
\JBLOCK{if report_data.statistics.unterminated_percentage > 0}
\JBLOCK{set _ = pie_data.append("%.1f"|format(report_data.statistics.unterminated_percentage) + "/Unterminated")}
\JBLOCK{endif}
\JBLOCK{if report_data.statistics.failed_percentage > 0}
\JBLOCK{set _ = pie_data.append("%.1f"|format(report_data.statistics.failed_percentage) + "/Failed")}
\JBLOCK{endif}
\JBLOCK{if report_data.statistics.timeout_percentage > 0}
\JBLOCK{set _ = pie_data.append("%.1f"|format(report_data.statistics.timeout_percentage) + "/Timeout")}
\JBLOCK{endif}
\JBLOCK{if report_data.statistics.memory_limit_percentage > 0}
\JBLOCK{set _ = pie_data.append("%.1f"|format(report_data.statistics.memory_limit_percentage) + "/Memory Limit")}
\JBLOCK{endif}
\pie[
    text=legend,
    radius=3,
    color={successcolor!60!white, falsifiedcolor!60!white, unterminatedcolor!60!white, failedcolor!60!white, warningcolor!60!white, memorycolor!60!white},
    sum=auto
]{
\VAR{pie_data|join(', ')}
}
\end{tikzpicture}
\caption{Success Rate}
\end{figure}
\JBLOCK{endif}

\#{ Cache Performance Pie Chart }
\begin{figure}[H]
\centering
\begin{tikzpicture}
\pie[
    text=legend,
    radius=3,
    color={infocolor!60!white, darkinfocolor!45!white},
    sum=auto
]{
\VAR{"%.1f"|format(report_data.statistics.cache_hit_percentage)}/Cache Hit,
\VAR{"%.1f"|format(report_data.statistics.fresh_percentage)}/Freshly Executed
}
\end{tikzpicture}
\caption{Cache Performance}
\end{figure}

\#{ Runtime per Task Bar Chart }
\JBLOCK{if report_data.tasks|length > 0}
\begin{figure}[H]
\centering
\begin{tikzpicture}
\begin{axis}[
    xbar,
    width=0.6\textwidth,
    height=\VAR{report_data.tasks|length * 0.03}\textheight,
    xlabel={Runtime (seconds)},
    ylabel={Tasks},
    ytick=data,
    yticklabels={
    \JBLOCK{for task in report_data.tasks}
    \tiny{\VAR{task.name|latex_escape}} \JBLOCK{if not loop.last},\JBLOCK{endif}
    \JBLOCK{endfor}
    },
    enlarge x limits=0.20,
    enlarge y limits=0.10,
    nodes near coords,
    nodes near coords align={horizontal},
]
\addplot[fill=blue!70] coordinates {
\JBLOCK{for task in report_data.tasks}
    (\VAR{"%.1f"|format(task.total_runtime)}, \VAR{loop.index0})
\JBLOCK{endfor}
};
\end{axis}
\end{tikzpicture}
\caption{Runtime per Task}
\end{figure}
\JBLOCK{endif}

\#{ Memory per Task Bar Chart }
\JBLOCK{if report_data.tasks|length > 0}
\begin{figure}[H]
\centering
\begin{tikzpicture}
\begin{axis}[
    xbar,
    width=0.6\textwidth,
    height=\VAR{report_data.tasks|length * 0.03}\textheight,
    xlabel={Memory (MB)},
    ylabel={Tasks},
    ytick=data,
    yticklabels={
    \JBLOCK{for task in report_data.tasks}
    \tiny{\VAR{task.name|latex_escape}}\JBLOCK{if not loop.last},\JBLOCK{endif}
    \JBLOCK{endfor}
    },
    enlarge x limits=0.20,
    enlarge y limits=0.10,
    nodes near coords,
    nodes near coords align={horizontal},
]
\addplot[fill=orange!70] coordinates {
\JBLOCK{for task in report_data.tasks}
    (\VAR{"%.1f"|format(task.peak_memory)}, \VAR{loop.index0})
\JBLOCK{endfor}
};
\end{axis}
\end{tikzpicture}
\caption{Memory Usage per Task}
\end{figure}
\JBLOCK{endif}

\subsection{Global Results}

\begin{NiceTabular}[width=\textwidth]{X[l,2]X[l,2]X[c,1]X[c,1]X[c,1]X[c,1]X[c,1]}
\hline
\tiny{\textbf{Task}} & \tiny{\textbf{Lemma}} & \tiny{\textbf{Version}} & \tiny{\textbf{Status}} & \tiny{\textbf{Runtime}} & \tiny{\textbf{Memory}} & \tiny{\textbf{Cache}} \\
\hline

\JBLOCK{for task in report_data.tasks}
    \JBLOCK{set task_rowspan = task.total_results}
    \JBLOCK{set outer_loop = loop}
    \JBLOCK{for lemma_group in task.lemma_groups}
        \JBLOCK{set lemma_rowspan = lemma_group.results|length}
        \JBLOCK{set middle_loop = loop}
        \JBLOCK{for result in lemma_group.results}
            \JBLOCK{if loop.first and middle_loop.first}
                \Block{\VAR{task_rowspan}-1}{\tiny{\VAR{task.name|latex_escape|hyphenate(20)}}} &
            \JBLOCK{else}
                 &
            \JBLOCK{endif}
            \JBLOCK{if loop.first}
                \Block{\VAR{lemma_rowspan}-1}{\tiny{\VAR{lemma_group.lemma|latex_escape|hyphenate(20)}}} &
            \JBLOCK{else}
                 &
            \JBLOCK{endif}
            \tiny{\VAR{result.tamarin_version|hyphenate(20)}} &
            \JBLOCK{if result.status == 'verified'}\successtext{\tiny{Verified}}\JBLOCK{elif result.status == 'falsified'}\falsifiedtext{\tiny{Falsified}}\JBLOCK{elif result.status == 'unterminated'}\unterminatedtext{\tiny{Unterminated}}\JBLOCK{elif result.status == 'timeout'}\warningtext{\tiny{Timeout}}\JBLOCK{elif result.status == 'memory_limit'}\memorytext{\tiny{Memory limit}}\JBLOCK{else}\failedtext{\tiny{Error}}\JBLOCK{endif} &
            \tiny{\VAR{"%.1f"|format(result.runtime)}s} &
            \tiny{\VAR{"%.1f"|format(result.peak_memory)}MB} &
            \infotext{\JBLOCK{if result.cache_hit}\tiny{CACHED}\JBLOCK{else}\tiny{FRESH}\JBLOCK{endif}} \\
            \JBLOCK{if not loop.last}\JBLOCK{endif}
        \JBLOCK{endfor}
        \JBLOCK{if not middle_loop.last}\JBLOCK{endif}
    \JBLOCK{endfor}
    \JBLOCK{if not outer_loop.last}\hline\JBLOCK{endif}
\JBLOCK{endfor}
\hline
\end{NiceTabular}

\subsection{Global Execution Timeline}

\JBLOCK{if report_data.tasks|length > 0 and report_data.tasks[0].execution_timeline|length > 0}
\begin{figure}[H]
\centering
\begin{ganttchart}[
    hgrid,
    vgrid,
    x unit=3mm,
    y unit title=6mm,
    y unit chart=6mm,
    title/.append style={fill=gray!50},
    title label font=\footnotesize,
    bar label font=\tiny,
    group label font=\tiny,
    bar/.append style={fill=blue!50},
    bar height=0.6,
    chart element start border=left,
    expand chart=\textwidth,
]{0}{\VAR{report_data.statistics.total_runtime|int + 5}}

\gantttitle{Global Execution Timeline}{\VAR{report_data.statistics.total_runtime|int + 5}} \\

\JBLOCK{set current_task = ""}
\JBLOCK{for task in report_data.tasks}
    \JBLOCK{if task.execution_timeline|length > 0}
        \JBLOCK{if current_task != task.name}
\ganttgroup{\VAR{task.name|latex_escape}}{0}{\VAR{report_data.statistics.total_runtime|int}} \\
            \JBLOCK{set current_task = task.name}
        \JBLOCK{endif}
        \JBLOCK{for item in task.execution_timeline}
\ganttbar{\VAR{item.label|latex_escape}}{\VAR{item.start}}{\VAR{item.end}} \\
        \JBLOCK{endfor}
    \JBLOCK{endif}
\JBLOCK{endfor}

\end{ganttchart}
\caption{Global Execution Timeline}
\end{figure}
\JBLOCK{endif}

\section{Task Details}

\JBLOCK{for task in report_data.tasks}
\subsection{Task: \VAR{task.name|latex_escape|hyphenate(20)}}\label{task:\VAR{task.name|replace(' ', '-')|lower}}

\subsubsection{Execution Summary}

\begin{NiceTabular}[width=\textwidth]{X[l,2]X[l,1]X[l,1]X[l,1]X[c,1]X[c,1]X[c,1]X[c,1]X[c,1]}
\hline
\tiny{\textbf{Lemma}} & \tiny{\textbf{Resources config}} & \tiny{\textbf{Options}} & \tiny{\textbf{Preprocessor}} & \tiny{\textbf{Tamarin Version}} & \tiny{\textbf{Status}} & \tiny{\textbf{Runtime}} & \tiny{\textbf{Memory Used}} & \tiny{\textbf{Cache Hit}} \\
\hline
\JBLOCK{for lemma_group in task.lemma_groups}
    \JBLOCK{set lemma_rowspan = lemma_group.results|length}
    \JBLOCK{set outer_loop = loop}
    \JBLOCK{for result in lemma_group.results}
        \JBLOCK{if loop.first}
            \Block{\VAR{lemma_rowspan}-1}{\tiny{\VAR{lemma_group.lemma|latex_escape|hyphenate(20)}}} &
            \Block{\VAR{lemma_rowspan}-1}{\tiny{\VAR{result.cores}c / \VAR{result.memory}GB / \VAR{result.timeout}s}} &
            \Block{\VAR{lemma_rowspan}-1}{\tiny{\VAR{result.options or "None"|hyphenate(20)}}} &
            \Block{\VAR{lemma_rowspan}-1}{\tiny{\VAR{result.preprocessor or "None"|hyphenate(20)}}} &
        \JBLOCK{else}
             &  &  &  &
        \JBLOCK{endif}
        \tiny{\VAR{result.tamarin_version}} &
        \JBLOCK{if result.status == 'verified'}\successtext{\tiny{Verified}}\JBLOCK{elif result.status == 'falsified'}\falsifiedtext{\tiny{Falsified}}\JBLOCK{elif result.status == 'unterminated'}\unterminatedtext{\tiny{Unterminated}}\JBLOCK{elif result.status == 'timeout'}\warningtext{\tiny{Timeout}}\JBLOCK{elif result.status == 'memory_limit'}\memorytext{\tiny{Memory limit}}\JBLOCK{else}\failedtext{\tiny{Error}}\JBLOCK{endif} &
        \tiny{\VAR{"%.2f"|format(result.runtime)}s} &
        \tiny{\VAR{"%.2f"|format(result.peak_memory)}MB} &
        \infotext{\JBLOCK{if result.cache_hit}\tiny{CACHED}\JBLOCK{else}\tiny{FRESH}\JBLOCK{endif}} \\
        \JBLOCK{if not loop.last}\JBLOCK{endif}
    \JBLOCK{endfor}
    \JBLOCK{if not outer_loop.last}\hline\JBLOCK{endif}
\JBLOCK{endfor}
\hline
\end{NiceTabular}

\#{ Version Comparison Charts if multiple versions }
\JBLOCK{set task_versions = []}
\JBLOCK{for lemma_group in task.lemma_groups}
    \JBLOCK{for result in lemma_group.results}
        \JBLOCK{if result.tamarin_version not in task_versions}
            \JBLOCK{set _ = task_versions.append(result.tamarin_version)}
        \JBLOCK{endif}
    \JBLOCK{endfor}
\JBLOCK{endfor}

\JBLOCK{if task_versions|length > 1}
\subsubsection{Version Comparisons}

\#{ Runtime Comparison Chart }
\begin{figure}[H]
\centering
\begin{tikzpicture}
\begin{axis}[
    xbar,
    width=0.6\textwidth,
    height=\VAR{task.lemma_groups|length * 0.1}\textheight,
    xlabel={Runtime (seconds)},
    ylabel={Lemmas},
    legend style={at={(0.5,-0.15)},anchor=north,legend columns=\VAR{task_versions|length}},
    yticklabel style={font=\tiny},
    ytick=data,
    enlarge x limits=0.2,
    enlarge y limits=0.75,
    yticklabels={
    \JBLOCK{for lemma_group in task.lemma_groups}
    \VAR{lemma_group.lemma|latex_escape}\JBLOCK{if not loop.last},\JBLOCK{endif}
    \JBLOCK{endfor}
    },
    nodes near coords,
    nodes near coords align={horizontal},
]

\JBLOCK{for version in task_versions}
\JBLOCK{set version_idx = loop.index0}
\addplot[fill=blue!\VAR{30 + version_idx * 20}] coordinates {
\JBLOCK{for lemma_group in task.lemma_groups}
    \JBLOCK{set version_result = lemma_group.results|selectattr('tamarin_version', 'equalto', version)|list}
    (\VAR{version_result[0].runtime if version_result else 0}, \VAR{loop.index0})
\JBLOCK{endfor}
};
\addlegendentry{\VAR{version|latex_escape}}
\JBLOCK{endfor}

\end{axis}
\end{tikzpicture}
\caption{Runtime Comparison by Version for \VAR{task.name|latex_escape}}
\end{figure}

\#{ Memory Comparison Chart }
\begin{figure}[H]
\centering
\begin{tikzpicture}
\begin{axis}[
    xbar,
    width=0.6\textwidth,
    height=\VAR{task.lemma_groups|length * 0.1}\textheight,
    xlabel={Memory (MB)},
    ylabel={Lemmas},
    legend style={at={(0.5,-0.15)},anchor=north,legend columns=\VAR{task_versions|length}},
    yticklabel style={font=\tiny},
    ytick=data,
    enlarge x limits=0.2,
    enlarge y limits=0.75,
    yticklabels={
    \JBLOCK{for lemma_group in task.lemma_groups}
    \VAR{lemma_group.lemma|latex_escape}\JBLOCK{if not loop.last},\JBLOCK{endif}
    \JBLOCK{endfor}
    },
    nodes near coords,
    nodes near coords align={horizontal},
]

\JBLOCK{for version in task_versions}
\JBLOCK{set version_idx = loop.index0}
\addplot[fill=orange!\VAR{30 + version_idx * 20}] coordinates {
\JBLOCK{for lemma_group in task.lemma_groups}
    \JBLOCK{set version_result = lemma_group.results|selectattr('tamarin_version', 'equalto', version)|list}
    (\VAR{version_result[0].peak_memory if version_result else 0}, \VAR{loop.index0})
\JBLOCK{endfor}
};
\addlegendentry{\VAR{version|latex_escape}}
\JBLOCK{endfor}

\end{axis}
\end{tikzpicture}
\caption{Memory Usage Comparison by Version for \VAR{task.name|latex_escape}}
\end{figure}
\JBLOCK{endif}

\#{ Task Timeline if available }
\JBLOCK{if task.execution_timeline|length > 0}
\subsubsection{Task Timeline}

\begin{figure}[H]
\centering
\begin{ganttchart}[
    hgrid,
    vgrid,
    x unit=3mm,
    y unit title=6mm,
    y unit chart=6mm,
    title/.append style={fill=gray!30},
    title label font=\small,
    bar label font=\scriptsize,
    bar/.append style={fill=green!40},
    bar height=0.6,
    expand chart=\textwidth
]{0}{\VAR{report_data.statistics.total_runtime|int + 5}}

\JBLOCK{for execution in task.execution_timeline}
\ganttbar{\VAR{execution.label|latex_escape}}{\VAR{execution.start}}{\VAR{execution.end}} \\
\JBLOCK{endfor}

\end{ganttchart}
\caption{Execution Timeline for \VAR{task.name|latex_escape}}
\end{figure}
\JBLOCK{endif}

\#{ Traces section }
\JBLOCK{set task_traces = report_data.traces|filter_traces_by_task(task)|list}
\JBLOCK{if task_traces|length > 0}
\subsubsection{Traces}

\JBLOCK{for trace in task_traces}
\paragraph{\VAR{trace.lemma|latex_escape|hyphenate(20)} (\VAR{trace.tamarin_version|hyphenate(20)})}

\textbf{JSON File:} \texttt{\VAR{trace.json_file|relative_from_report|latex_escape}}
\JBLOCK{if trace.dot_file}
\newline\textbf{DOT File:} \texttt{\VAR{trace.dot_file|relative_from_report|latex_escape}}
\JBLOCK{endif}

\JBLOCK{if trace.png_file}
\begin{figure}[H]
\centering
\includegraphics[width=\textwidth]{\VAR{trace.png_file|relative_from_report}}
\caption{Trace visualization for \VAR{trace.lemma|latex_escape}}
\end{figure}
\JBLOCK{elif trace.svg_content}
\#{ Note: SVG content cannot be directly embedded in LaTeX, would need conversion }
\textit{SVG trace visualization available (see HTML report for interactive view)}
\JBLOCK{endif}

\JBLOCK{endfor}
\JBLOCK{endif}

\JBLOCK{endfor}

\JBLOCK{if report_data.has_errors}
\section{Errors}

\#{ Error Types Pie Chart }
\JBLOCK{if report_data.error_type_distribution|length > 0}
\begin{figure}[H]
\centering
\begin{tikzpicture}
\JBLOCK{set error_pie_data = []}
\JBLOCK{for error_type in report_data.error_type_distribution}
\JBLOCK{set _ = error_pie_data.append("%.1f"|format(error_type.percentage) + "/" + error_type.name)}
\JBLOCK{endfor}
\pie[
    text=legend,
    radius=3,
    color={failedcolor!60!white, warningcolor!60!white, memorycolor!60!white, orange!60!white, purple!60!white},
    sum=auto
]{
\VAR{error_pie_data|join(', ')}
}
\end{tikzpicture}
\caption{Error Types Distribution}
\end{figure}
\JBLOCK{endif}

\subsection{Error Summary}

\begin{NiceTabular}[width=\textwidth]{X[l,1]X[l,1]X[l,1]X[l,1]X[l,1]X[c,1]X[l,1]X[c,1]X[c,1]X[l,2]}
\hline
\textbf{\tiny{Task}} & \textbf{\tiny{Lemma}} & \textbf{\tiny{Resources config}} & \textbf{\tiny{Options}} & \textbf{\tiny{Preprocessor}} & \textbf{\tiny{Tamarin Version}} & \textbf{\tiny{Error Type}} & \textbf{\tiny{Runtime}} & \textbf{\tiny{Memory Used}} & \textbf{\tiny{Description}} \\
\hline
\JBLOCK{for error in report_data.error_summary}
    \JBLOCK{set task_rowspan = error.total_errors}
    \JBLOCK{set outer_loop = loop}
    \JBLOCK{for lemma_error in error.lemma_errors}
        \JBLOCK{set lemma_rowspan = lemma_error.results|length}
        \JBLOCK{set middle_loop = loop}
        \JBLOCK{for result in lemma_error.results}
            \JBLOCK{if loop.first and middle_loop.first}
                \Block{\VAR{task_rowspan}-1}{\tiny{\VAR{error.task_name|latex_escape|hyphenate(9)}}} &
            \JBLOCK{else}
                 &
            \JBLOCK{endif}
            \JBLOCK{if loop.first}
                \Block{\VAR{lemma_rowspan}-1}{\tiny{\VAR{lemma_error.lemma|latex_escape|hyphenate(9)}}} &
                \Block{\VAR{lemma_rowspan}-1}{\tiny{\VAR{result.cores}c / \VAR{result.memory}GB / \VAR{result.timeout}s}} &
                \Block{\VAR{lemma_rowspan}-1}{\tiny{\VAR{result.options or "None"}}} &
                \Block{\VAR{lemma_rowspan}-1}{\tiny{\VAR{result.preprocessor or "None"}}} &
            \JBLOCK{else}
                 &  &  &  &
            \JBLOCK{endif}
            \tiny{\VAR{result.tamarin_version|hyphenate(10)}} &
            \JBLOCK{if result.error_type == 'tamarin_error'}\failedtext{\tiny{Tamarin Error}}\JBLOCK{elif result.error_type == 'timeout'}\warningtext{\tiny{Timeout}}\JBLOCK{elif result.error_type == 'memory_limit'}\memorytext{\tiny{Memory Limit}}\JBLOCK{else}\failedtext{\tiny{Unexpected Error}}\JBLOCK{endif} &
            \tiny{\VAR{"%.2f"|format(result.runtime)}s} &
            \tiny{\VAR{"%.2f"|format(result.peak_memory)}MB} &
            \tiny{\VAR{result.error_description or "No description available"|latex_escape|hyphenate(15)}} \\
            \JBLOCK{if not loop.last}\JBLOCK{endif}
        \JBLOCK{endfor}
        \JBLOCK{if not middle_loop.last}\JBLOCK{endif}
    \JBLOCK{endfor}
    \JBLOCK{if not outer_loop.last}\hline\JBLOCK{endif}
\JBLOCK{endfor}
\hline
\end{NiceTabular}

\subsection{Detailed Error Information}

\JBLOCK{for error in report_data.detailed_errors}
\subsubsection*{
\JBLOCK{if error.type == 'tamarin_error'}\failedtext{FAILED}\JBLOCK{elif error.type == 'timeout'}\warningtext{TIMED OUT}\JBLOCK{elif error.type == 'memory_limit'}\memorytext{MEMORY LIMIT}\JBLOCK{else}\failedtext{ERROR}\JBLOCK{endif}:
\VAR{error.task_name|latex_escape|hyphenate(20)}
}

\textbf{On lemma:} \VAR{error.lemma|latex_escape|hyphenate(20)}, \textbf{with tamarin-prover:} \VAR{error.tamarin_version|hyphenate(20)}

\VAR{error.description|latex_escape|hyphenate(20)}

\JBLOCK{if error.stderr_output}
\begin{lstlisting}[style=shellstyle, language=bash, caption=Error Output]
\VAR{error.stderr_output}
\end{lstlisting}
\JBLOCK{endif}

\JBLOCK{endfor}

\textbf{Rerun file:} \texttt{\VAR{report_data.rerun_file|relative_from_report|latex_escape}}

\JBLOCK{else}
\section{Execution Summary}

\begin{center}
\successtext{\textbf{No errors occurred during this run}}

All tasks completed successfully without any failures, timeouts, or memory limit issues.
\end{center}
\JBLOCK{endif}

\vfill

\begin{center}
\textit{Report generated by Batch Tamarin v\VAR{version or 'unknown'} on \VAR{report_data.generation_date.strftime('%Y-%m-%d at %H:%M:%S')}}
\end{center}

\end{document}
