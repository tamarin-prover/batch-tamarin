# Batch Tamarin Execution Report

**Execution results from**: {{ report_data.results_directory }}
**Executed**: {{ report_data.batch_execution_date.strftime('%Y-%m-%d %H:%M:%S') }}

## Overview

### Configuration

**Global Settings**:
| Setting | Value |
|---------|-------|
| Max cores | {{ report_data.config.global_max_cores or 'Not specified' }} |
| Max memory | {{ report_data.config.global_max_memory or 'Not specified' }}GB |
| Default timeout | {{ report_data.config.default_timeout or 'Not specified' }}s |
| Output directory | {{ report_data.config.output_directory or 'Not specified' }} |

**Tamarin Versions**:
| Alias | Path | Version |
|-------|------|---------|
{% for alias, info in report_data.config.tamarin_versions.items() %}| {{ alias }} | {{ info.path }} | {{ info.version }} |
{% endfor %}

### Summary

**Global Statistics**:
| Metric | Value |
|--------|-------|
| Total tasks | {{ report_data.statistics.total_tasks }} |
| Extracted lemmas | {{ report_data.statistics.total_lemmas }} |
| Cached lemmas | {{ report_data.statistics.cache_hits }} |
| Successful tasks | {{ report_data.statistics.successful_tasks }} ({{ "%.1f"|format(report_data.statistics.successful_tasks_percentage) }}%) |
| Failed tasks | {{ report_data.statistics.failed_tasks }} ({{ "%.1f"|format(report_data.statistics.failed_tasks_percentage) }}%) |
| Total runtime | {{ "%.2f"|format(report_data.statistics.total_runtime) }}s |
| Total memory usage (peak) | {{ "%.2f"|format(report_data.statistics.total_memory_usage) }}MB |

{% if charts.success_rate %}
**Success Rate**:
```mermaid
{{ charts.success_rate.to_mermaid_pie() }}
```
{% endif %}

{% if charts.cache_hit_rate %}
**Cache Performance**:
```mermaid
{{ charts.cache_hit_rate.to_mermaid_pie() }}
```
{% endif %}

{% if charts.runtime_per_task %}
**Runtime per Task**:
```mermaid
{{ charts.runtime_per_task.to_mermaid_bar() }}
```
{% endif %}

{% if charts.memory_per_task %}
**Memory Usage per Task**:
```mermaid
{{ charts.memory_per_task.to_mermaid_bar() }}
```
{% endif %}

{% if charts.execution_timeline %}
**Execution Timeline**:
```mermaid
{{ charts.execution_timeline.to_mermaid_gantt() }}
```
{% endif %}

## Task Details

{% for task in report_data.tasks %}
### Task: {{ task.name }}

#### Execution Summary

**Configuration and Results**:
| Lemma | Options | Cores | Memory | Timeout | Tamarin Version | Status | Memory Used | Runtime | Cache Hit |
|-------|---------|-------|--------|---------|----------------|---------|-------------|---------|-----------|
{% for result in task.results %}| {{ result.lemma }} | {{ result.tamarin_options|join(' ') if result.tamarin_options else 'None' }} | {{ result.max_cores or 'Default' }} | {{ result.max_memory or 'Default' }}GB | {{ result.timeout or 'Default' }}s | {{ result.tamarin_version }} | {{ "✅ Success" if result.status == "success" else "❌ Failed" }} | {{ "%.2f"|format(result.peak_memory) }}MB | {{ "%.2f"|format(result.runtime) }}s | {{ "✅" if result.cache_hit else "❌" }} |
{% endfor %}

{% if report_data.has_version_comparisons(task.name) %}
#### Version Comparisons

**Runtime Comparison**:
```mermaid
xychart-beta
    title "Runtime by Version for {{ task.name }}"
    x-axis [{% for version in task.tamarin_versions %}"{{ version }}"{% if not loop.last %}, {% endif %}{% endfor %}]
    y-axis "Runtime (seconds)"
    {% for lemma in task.lemmas %}
    line [{% for version in task.tamarin_versions %}{% set results = report_data.get_results_by_lemma(lemma)|selectattr('tamarin_version', 'equalto', version)|list %}{{ results[0].runtime if results else 0 }}{% if not loop.last %}, {% endif %}{% endfor %}]
    {% endfor %}
```

**Memory Usage Comparison**:
```mermaid
xychart-beta
    title "Memory Usage by Version for {{ task.name }}"
    x-axis [{% for version in task.tamarin_versions %}"{{ version }}"{% if not loop.last %}, {% endif %}{% endfor %}]
    y-axis "Memory (MB)"
    {% for lemma in task.lemmas %}
    line [{% for version in task.tamarin_versions %}{% set results = report_data.get_results_by_lemma(lemma)|selectattr('tamarin_version', 'equalto', version)|list %}{{ results[0].peak_memory if results else 0 }}{% if not loop.last %}, {% endif %}{% endfor %}]
    {% endfor %}
```
{% endif %}

{% set task_traces = report_data.traces|selectattr('lemma', 'in', task.lemmas)|list %}
{% if task_traces %}
#### Traces

{% for trace in task_traces %}
**{{ trace.lemma }}** ({{ trace.tamarin_version }}):
- **JSON File**: [{{ trace.json_file }}]({{ trace.json_file }})
{% if trace.dot_file %}
- **DOT File**: [{{ trace.dot_file }}]({{ trace.dot_file }})
{% endif %}
{% if trace.dot_file %}
{% set svg_file = trace.dot_file.replace('.dot', '.svg') %}

**Trace Visualization**:
![{{ trace.lemma }}_trace]({{ svg_file }})
{% endif %}
{% endfor %}
{% endif %}

{% endfor %}

{% set failed_results = report_data.failed_results %}
{% if failed_results %}
## Errors

**Error Summary**:

{% if charts.error_types %}
```mermaid
{{ charts.error_types.to_mermaid_pie() }}
```
{% endif %}

| Task | Lemma | Version | Options | Resources | Error Type | Description |
|------|-------|---------|---------|-----------|------------|-------------|
{% for error in report_data.error_details %}| {{ error.task }} | {{ error.lemma }} | {{ error.version }} | {{ error.options }} | {{ error.resources }} | {{ error.type }} | {{ error.message }} |
{% endfor %}

**Detailed Error Information**:
{% for result in failed_results %}- **{{ result.task_name }}--{{ result.lemma }}--{{ result.tamarin_version }}**: {{ result.error_description }}
{% if result.stderr_lines %}```sh
  {{ result.stderr_lines|join('\n') }}
  ```
{% endif %}
{% endfor %}
{% endif %}

---

*Report generated by Batch Tamarin v{{ version or 'unknown' }} on {{ report_data.generation_date.strftime('%Y-%m-%d at %H:%M:%S') }}*
