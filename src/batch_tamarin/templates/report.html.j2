<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Batch Tamarin Execution Report</title>
    <script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"></script>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        h1,
        h2,
        h3 {
            color: #2c3e50;
        }

        table {
            border-collapse: collapse;
            width: 100%;
            margin: 20px 0;
        }

        th,
        td {
            border: 1px solid #ddd;
            padding: 12px;
            text-align: left;
        }

        th {
            background-color: #dfe9ee;
            font-weight: 600;
        }

        tr:nth-child(even) {
            background-color: #f6f6f6;
        }

        /* Simple task and lemma alternating colors */
        .task-table tr.task-white {
            background-color: white;
        }

        .task-table tr.task-light-gray {
            background-color: #f4fbff;
        }

        /* light blue accent */

        /* Lemma alternation within white tasks */
        .task-table tr.task-white.lemma-alt {
            background-color: #f6f6f6;
        }

        /* lighter gray */

        /* Lemma alternation within light gray tasks */
        .task-table tr.task-light-gray.lemma-alt {
            background-color: #edf7ff;
        }

        /* deeper blue accent */
        .success {
            color: #28a745;
        }

        /* green for verified */
        .failed {
            color: #ec1026;
        }

        /* red for failed */
        .warning {
            color: #ea9400;
        }

        /* orange with green for timeout */
        .info {
            color: #116dd7;
        }

        /* blue for info */
        .darkinfo {
            color: #1200b9;
        }

        /* darker blue for info */
        .memory {
            color: #8b5cf6;
        }

        /* violet for memory limit */
        .falsified {
            color: #e600ff;
        }

        /* light violet for falsified */
        .unterminated {
            color: #dbc100;
        }

        /* yellow-orange for unterminated */
        pre {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 5px;
            overflow-x: auto;
        }

        .error-details {
            background-color: #ffeaec;
            border: 1px solid #ffdcdf;
            border-radius: 5px;
            padding: 15px;
            margin: 10px 0;
        }

        .error-details h3 {
            margin: 0;
        }

        .mermaid {
            margin: 20px 0;
            text-align: center;
        }

        .chart-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin: 20px 0;
        }

        .chart-item {
            flex: 1;
            min-width: 400px;
        }

        .trace-visualization {
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 10px;
            margin: 10px 0;
            background-color: #fff;
        }

        .trace-visualization svg {
            max-width: 100%;
            height: auto;
            border: 1px solid #eee;
            border-radius: 3px;
        }

        .trace-svg-container {
            text-align: center;
            margin: 20px 0;
            overflow-x: auto;
        }

        .settings,
        .summary {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/github.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/languages/bash.min.js"></script>
    <script>hljs.highlightAll();</script>
</head>

<body>
    <h1>Batch Tamarin Execution Report</h1>

    <div class="info">
        <strong>Execution results from:</strong> {{ results_directory }}<br>
        <strong>Executed :</strong> {{ batch_execution_date.strftime('%Y-%m-%d %H:%M:%S') }}
    </div>

    <h2 id="table-of-contents">Table of Contents</h2>
    <ul>
        <li><a href="#overview">Overview</a>
            <ul>
                <li><a href="#configuration">Configuration</a></li>
                <li><a href="#global-summary">Global Summary</a></li>
                <li><a href="#global-results">Global Results</a></li>
                <li><a href="#global-timeline">Global Execution Timeline</a></li>
            </ul>
        </li>
        <li><a href="#task-details">Task Details</a>
            <ul>
                {% for task in report_data.tasks %}
                <li><a href="#task-{{ task.name|replace(' ', '-')|lower }}">{{ task.name }}</a></li>
                {% endfor %}
            </ul>
        </li>
        <li><a href="#errors">Errors</a></li>
    </ul>

    <h2 id="overview">Overview</h2>

    <h3 id="configuration">Configuration</h3>

    <div class="settings">
        <div>
            <h4>Global Settings</h4>
            <table>
                <thead>
                    <tr>
                        <th>Setting</th>
                        <th>Value</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Max cores</td>
                        <td>{{ report_data.config.global_max_cores or 'Not specified' }}</td>
                    </tr>
                    <tr>
                        <td>Max memory</td>
                        <td>{{ report_data.config.global_max_memory or 'Not specified' }}GB</td>
                    </tr>
                    <tr>
                        <td>Default timeout</td>
                        <td>{{ report_data.config.default_timeout or 'Not specified' }}s</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div>
            <h4>Tamarin Versions</h4>
            <table>
                <thead>
                    <tr>
                        <th>Alias</th>
                        <th>Path</th>
                        <th>Version</th>
                    </tr>
                </thead>
                <tbody>
                    {% for alias, info in report_data.config.tamarin_versions.items() %}
                    <tr>
                        <td>{{ alias }}</td>
                        <td><code>{{ info.path }}</code></td>
                        <td>{{ info.version }}</td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>

    <h3 id="global-summary">Global Summary</h3>

    <h4>Global Statistics</h4>
    <div class="summary">
        <table>
            <thead>
                <tr>
                    <th>Metric</th>
                    <th>Value</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Total Executed Lemmas</td>
                    <td>{{ report_data.statistics.total_lemmas }}</td>
                </tr>
                <tr>
                    <td>Verified Lemmas</td>
                    <td class="success">{{ report_data.statistics.verified_lemmas }} ({{ "%.1f"|format(report_data.statistics.verified_percentage) }}%)</td>
                </tr>
                <tr>
                    <td>Falsified Lemmas</td>
                    <td class="falsified">{{ report_data.statistics.falsified_lemmas }} ({{ "%.1f"|format(report_data.statistics.falsified_percentage) }}%)</td>
                </tr>
                <tr>
                    <td>Unterminated Lemmas</td>
                    <td class="unterminated">{{ report_data.statistics.unterminated_lemmas }} ({{ "%.1f"|format(report_data.statistics.unterminated_percentage) }}%)</td>
                </tr>
                <tr>
                    <td>Failed Executions</td>
                    <td class="failed">{{ report_data.statistics.failed_lemmas }} ({{ "%.1f"|format(report_data.statistics.failed_percentage) }}%)</td>
                </tr>
                <tr>
                    <td>Lemmas killed by timeout</td>
                    <td class="warning">{{ report_data.statistics.timeout_lemmas }} ({{ "%.1f"|format(report_data.statistics.timeout_percentage) }}%)</td>
                </tr>
                <tr>
                    <td>Lemmas killed for memory limit</td>
                    <td class="memory">{{ report_data.statistics.memory_limit_lemmas }} ({{ "%.1f"|format(report_data.statistics.memory_limit_percentage) }}%)</td>
                </tr>
            </tbody>
        </table>
        <table>
            <thead>
                <tr>
                    <th>Metric</th>
                    <th>Value</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Total runtime</td>
                    <td>{{ "%.1f"|format(report_data.statistics.total_runtime) }}s</td>
                </tr>
                <tr>
                    <td>Total peak memory used</td>
                    <td>{{ "%.1f"|format(report_data.statistics.total_memory_usage / 1024) }}GB</td>
                </tr>
                <tr>
                    <td>Max peak memory used</td>
                    <td>{{ "%.1f"|format(report_data.statistics.max_memory_usage / 1024) }}GB</td>
                </tr>
                <tr>
                    <td>Freshly executed tasks</td>
                    <td class="darkinfo">{{ report_data.statistics.fresh_executions }} ({{ "%.1f"|format(report_data.statistics.fresh_percentage) }}%)</td>
                </tr>
                <tr>
                    <td>Cache hits</td>
                    <td class="info">{{ report_data.statistics.cache_hits }} ({{ "%.1f"|format(report_data.statistics.cache_hit_percentage) }}%)</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="chart-container">
        <div class="chart-item">
            <div class="mermaid">
                %%{init: {'theme': 'base', 'themeVariables': { 'pie1': '#534FBD', 'pie2': '#6C6ACF', 'pie3': '#8B8AE0',
                'pie4': '#B3B2F2', 'pie5': '#D7D6FB', 'pie6': '#ECECFF'}}}%%
                pie title Success Rate
                {% if report_data.statistics.verified_percentage > 0 %}"Verified": {{ "%.1f"|format(report_data.statistics.verified_percentage) }}
                {% endif %}{% if report_data.statistics.falsified_percentage > 0 %}"Falsified": {{ "%.1f"|format(report_data.statistics.falsified_percentage) }}
                {% endif %}{% if report_data.statistics.unterminated_percentage > 0 %}"Unterminated": {{ "%.1f"|format(report_data.statistics.unterminated_percentage) }}
                {% endif %}{% if report_data.statistics.failed_percentage > 0 %}"Failed": {{ "%.1f"|format(report_data.statistics.failed_percentage) }}
                {% endif %}{% if report_data.statistics.timeout_percentage > 0 %}"Timeout": {{ "%.1f"|format(report_data.statistics.timeout_percentage) }}
                {% endif %}{% if report_data.statistics.memory_limit_percentage > 0 %}"Memory Limit": {{ "%.1f"|format(report_data.statistics.memory_limit_percentage) }}
                {% endif %}
            </div>
        </div>
        <div class="chart-item">
            <div class="mermaid">
                %%{init: {'theme': 'base', 'themeVariables': { 'pie1': '#8B8AE0', 'pie2': '#ECECFF'}}}%%
                pie title Cache Performance
                "Cache Hit": {{ "%.1f"|format(report_data.statistics.cache_hit_percentage) }}
                "Freshly Executed": {{ "%.1f"|format(report_data.statistics.fresh_percentage) }}
            </div>
        </div>
    </div>

    <div class="chart-container">
        <div class="chart-item">
            <div class="mermaid">
---
config:
    xyChart:
        width: 600
        height: 400
        xAxis:
            labelFontSize: 10
        yAxis:
            labelFontSize: 12
---
xychart-beta horizontal
    title "Runtime per Task"
    x-axis [{% for task in report_data.tasks %}"{{ task.name[-30:] }}"{% if not loop.last %}, {% endif %}{% endfor %}]
    y-axis "seconds"
    bar [{% for task in report_data.tasks %}{{ "%.1f"|format(task.total_runtime) }}{% if not loop.last %}, {% endif %}{% endfor %}]
            </div>
        </div>
        <div class="chart-item">
            <div class="mermaid">
---
config:
    xyChart:
        width: 600
        height: 400
        xAxis:
            labelFontSize: 10
        yAxis:
            labelFontSize: 12
---
xychart-beta horizontal
    title "Memory Usage per Task"
    x-axis [{% for task in report_data.tasks %}"{{ task.name[-30:] }}"{% if not loop.last %}, {% endif %}{% endfor %}]
    y-axis "MB"
    bar [{% for task in report_data.tasks %}{{ "%.1f"|format(task.peak_memory) }}{% if not loop.last %}, {% endif %}{% endfor %}]
            </div>
        </div>
    </div>

    <h3 id="global-results">Global Results</h3>
    <table class="task-table">
        <thead>
            <tr>
                <th>Task</th>
                <th>Extracted lemma</th>
                <th>Tamarin Version</th>
                <th>Status</th>
                <th>Runtime</th>
                <th>Peak Memory Used</th>
                <th>Cache Hit</th>
            </tr>
        </thead>
        <tbody>
            {% for task in report_data.tasks %}
                {% set task_rowspan = task.total_results %}
                {% set outer_loop = loop %}
                {% set task_color = "task-white" if outer_loop.index0 % 2 == 0 else "task-light-gray" %}
                {% for lemma_group in task.lemma_groups %}
                    {% set lemma_rowspan = lemma_group.results|length %}
                    {% set middle_loop = loop %}
                    {% set lemma_alt = middle_loop.index0 % 2 == 1 %}
                    {% for result in lemma_group.results %}
                        <tr class="{{ task_color }}{% if lemma_alt %} lemma-alt{% endif %}">
                            {% if loop.first and middle_loop.first %}
                                <td{% if task_rowspan > 1 %} rowspan="{{ task_rowspan }}"{% endif %}>
                                    <strong>{{ task.name }}</strong><br>
                                    <small style="color: #6c757d;">{{ task.theory_file }}</small>
                                </td>
                            {% endif %}
                            {% if loop.first %}
                                <td{% if lemma_rowspan > 1 %} rowspan="{{ lemma_rowspan }}"{% endif %}>{{ lemma_group.lemma }}</td>
                            {% endif %}
                            <td>{{ result.tamarin_version }}</td>
                            <td class="{% if result.status == 'verified' %}success{% elif result.status == 'falsified' %}falsified{% elif result.status == 'unterminated' %}unterminated{% elif result.status == 'timeout' %}warning{% elif result.status == 'memory_limit' %}memory{% else %}failed{% endif %}">
                                {% if result.status == 'verified' %} ✅ Verified
                                {% elif result.status == 'falsified' %} ❗ Falsified
                                {% elif result.status == 'unterminated' %} 🚧 Unterminated
                                {% elif result.status == 'timeout' %} ⏳ Timed Out
                                {% elif result.status == 'memory_limit' %} 🧠 Memory Limit
                                {% else %} ❌ Failed
                                {% endif %}
                            </td>
                            <td>{{ "%.1f"|format(result.runtime) }}s</td>
                            <td>{{ "%.1f"|format(result.peak_memory) }}MB</td>
                            <td class="info">{% if result.cache_hit %}💾 Yes{% else %}💾 No{% endif %}</td>
                        </tr>
                    {% endfor %}
                {% endfor %}
            {% endfor %}
        </tbody>
    </table>

    <h3 id="global-timeline">Global Execution Timeline</h3>
    <div class="mermaid">
        gantt
        title Global Execution Timeline
        dateFormat X
        axisFormat %H:%M:%S
        {% for task in report_data.tasks %}
        {% if task.execution_timeline %}
        section {{ task.name }}
        {% for item in task.execution_timeline %}
        {{ item.label }} : {{ item.start }}, {{ item.end }}
        {% endfor %}
        {% endif %}
        {% endfor %}
    </div>

    <h2 id="task-details">Task Details</h2>

    {% for task in report_data.tasks %}
    <h3 id="task-{{ task.name|replace(' ', '-')|lower }}">Task: {{ task.name }}</h3>

    <h4>Execution Summary</h4>
    <table class="task-table">
        <thead>
            <tr>
                <th>Lemma</th>
                <th>Resources config</th>
                <th>Options</th>
                <th>Preprocessor</th>
                <th>Tamarin Version</th>
                <th>Status</th>
                <th>Runtime</th>
                <th>Peak Memory Used</th>
                <th>Cache Hit</th>
            </tr>
        </thead>
        <tbody>
            {% for lemma_group in task.lemma_groups %}
                {% set lemma_rowspan = lemma_group.results|length %}
                {% set outer_loop = loop %}
                {% set lemma_color = "task-white" if outer_loop.index0 % 2 == 0 else "task-light-gray" %}
                {% for result in lemma_group.results %}
                    {% set result_alt = loop.index0 % 2 == 1 %}
                    <tr class="{{ lemma_color }}{% if result_alt %} lemma-alt{% endif %}">
                        {% if loop.first %}
                            <td{% if lemma_rowspan > 1 %} rowspan="{{ lemma_rowspan }}"{% endif %}>{{ lemma_group.lemma }}</td>
                            <td{% if lemma_rowspan > 1 %} rowspan="{{ lemma_rowspan }}"{% endif %}>{{ result.cores }}c / {{ result.memory }}GB / {{ result.timeout }}s</td>
                            <td{% if lemma_rowspan > 1 %} rowspan="{{ lemma_rowspan }}"{% endif %}>{{ result.options or "None" }}</td>
                            <td{% if lemma_rowspan > 1 %} rowspan="{{ lemma_rowspan }}"{% endif %}>{{ result.preprocessor or "None" }}</td>
                        {% endif %}
                        <td>{{ result.tamarin_version }}</td>
                        <td class="{% if result.status == 'verified' %}success{% elif result.status == 'falsified' %}falsified{% elif result.status == 'unterminated' %}unterminated{% elif result.status == 'timeout' %}warning{% elif result.status == 'memory_limit' %}memory{% else %}failed{% endif %}">
                            {% if result.status == 'verified' %}✅ Verified
                            {% elif result.status == 'falsified' %}❗ Falsified
                            {% elif result.status == 'unterminated' %}🚧 Unterminated
                            {% elif result.status == 'timeout' %}⏳ Timed Out
                            {% elif result.status == 'memory_limit' %}🧠 Memory Limit
                            {% else %}❌ Failed
                            {% endif %}
                        </td>
                        <td>{{ "%.2f"|format(result.runtime) }}s</td>
                        <td>{{ "%.2f"|format(result.peak_memory) }}MB</td>
                        <td class="info">{% if result.cache_hit %}💾 Yes{% else %}💻 No{% endif %}</td>
                    </tr>
                {% endfor %}
            {% endfor %}
        </tbody>
    </table>

    {% if task.has_version_comparisons %}
    <div class="chart-container">
        <div class="chart-item">
            <div class="mermaid">
---
config:
    xyChart:
        width: 600
        height: 400
        xAxis:
            labelFontSize: 10
        yAxis:
            labelFontSize: 12
---
xychart-beta horizontal
    title "Runtime by Version for {{ task.name }}"
    x-axis [{% for comparison in task.version_comparisons %}"{{ comparison.label[-30:] }}"{% if not loop.last %}, {% endif %}{% endfor %}]
    y-axis "Runtime (seconds)"
    bar [{% for comparison in task.version_comparisons %}{{ "%.2f"|format(comparison.runtime) }}{% if not loop.last %}, {% endif %}{% endfor %}]
            </div>
        </div>
        <div class="chart-item">
            <div class="mermaid">
---
config:
    xyChart:
        width: 600
        height: 400
        xAxis:
            labelFontSize: 10
        yAxis:
            labelFontSize: 12
---
xychart-beta horizontal
    title "Memory Usage by Version for {{ task.name }}"
    x-axis [{% for comparison in task.version_comparisons %}"{{ comparison.label[-30:] }}"{% if not loop.last %}, {% endif %}{% endfor %}]
    y-axis "Memory (MB)"
    bar [{% for comparison in task.version_comparisons %}{{ "%.2f"|format(comparison.memory) }}{% if not loop.last %}, {% endif %}{% endfor %}]
            </div>
        </div>
    </div>
    {% endif %}

    {% if task.execution_timeline %}
    <div class="chart-item">
        <div class="mermaid">
            gantt
            title Execution Timeline for {{ task.name }}
            dateFormat X
            axisFormat %H:%M:%S
            section {{ task.name }}
            {% for execution in task.execution_timeline %}
            {{ execution.label }} : {{ execution.start }}, {{ execution.end }}
            {% endfor %}
        </div>
    </div>
    {% endif %}

    {% if task.traces %}
    <h4>Traces</h4>
    {% for trace in task.traces %}
    <div class="trace-visualization">
        <h5>{{ trace.lemma }} ({{ trace.tamarin_version }})</h5>
        <p>
            <strong>JSON File:</strong> <a href="{{ trace.json_file }}">{{ trace.json_file }}</a>
            {% if trace.dot_file %}
            <br><strong>DOT File:</strong> <a href="{{ trace.dot_file }}">{{ trace.dot_file }}</a>
            {% endif %}
        </p>
        {% if trace.svg_content %}
        <div class="trace-svg-container">
            {{ trace.svg_content|safe }}
        </div>
        {% endif %}
    </div>
    {% endfor %}
    {% endif %}

    {% endfor %}

    <h2 id="errors">Errors</h2>

    {% if report_data.has_errors %}

    <div class="mermaid">
        %%{init: {'theme': 'base', 'themeVariables': { 'pie1': '#6C6ACF', 'pie2': '#8B8AE0',
        'pie3': '#B3B2F2', 'pie4': '#D7D6FB', 'pie5': '#ECECFF'}}}%%
        pie title Error Types
        {% for error_type in report_data.error_type_distribution %}
        "{{ error_type.name }}": {{ "%.1f"|format(error_type.percentage) }}
        {% endfor %}
    </div>

    <h3>Error Summary</h3>
    <table class="task-table">
        <thead>
            <tr>
                <th>Task</th>
                <th>Lemma</th>
                <th>Resources config</th>
                <th>Options</th>
                <th>Preprocessor</th>
                <th>Tamarin Version</th>
                <th>Error</th>
                <th>Runtime</th>
                <th>Peak Memory Used</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            {% for error in report_data.error_summary %}
                {% set task_rowspan = error.total_errors %}
                {% set outer_loop = loop %}
                {% set task_color = "task-white" if outer_loop.index0 % 2 == 0 else "task-light-gray" %}
                {% for lemma_error in error.lemma_errors %}
                    {% set lemma_rowspan = lemma_error.results|length %}
                    {% set middle_loop = loop %}
                    {% set lemma_alt = middle_loop.index0 % 2 == 1 %}
                    {% for result in lemma_error.results %}
                        <tr class="{{ task_color }}{% if lemma_alt %} lemma-alt{% endif %}">
                            {% if loop.first and middle_loop.first %}
                                <td{% if task_rowspan > 1 %} rowspan="{{ task_rowspan }}"{% endif %}>{{ error.task_name }}</td>
                            {% endif %}
                            {% if loop.first %}
                                <td{% if lemma_rowspan > 1 %} rowspan="{{ lemma_rowspan }}"{% endif %}>{{ lemma_error.lemma }}</td>
                                <td{% if lemma_rowspan > 1 %} rowspan="{{ lemma_rowspan }}"{% endif %}>{{ result.cores }}c / {{ result.memory }}GB / {{ result.timeout }}s</td>
                                <td{% if lemma_rowspan > 1 %} rowspan="{{ lemma_rowspan }}"{% endif %}>{{ result.options or "None" }}</td>
                                <td{% if lemma_rowspan > 1 %} rowspan="{{ lemma_rowspan }}"{% endif %}>{{ result.preprocessor or "None" }}</td>
                            {% endif %}
                            <td>{{ result.tamarin_version }}</td>
                            <td class="{% if result.error_type == 'tamarin_error' %}failed{% elif result.error_type == 'timeout' %}warning{% elif result.error_type == 'memory_limit' %}memory{% else %}failed{% endif %}">
                                {% if result.error_type == 'tamarin_error' %}❌ Tamarin Error
                                {% elif result.error_type == 'timeout' %}⏳ Timeout
                                {% elif result.error_type == 'memory_limit' %}🧠 Memory Limit
                                {% else %}❌ Error
                                {% endif %}
                            </td>
                            <td>{{ "%.2f"|format(result.runtime) }}s</td>
                            <td>{{ "%.2f"|format(result.peak_memory) }}MB</td>
                            <td>{{ result.description }}</td>
                        </tr>
                    {% endfor %}
                {% endfor %}
            {% endfor %}
        </tbody>
    </table>

    <h3>Detailed Error Information</h3>
    {% for error in report_data.detailed_errors %}
    <div class="error-details">
        <h3><span class="{% if error.type == 'tamarin_error' %}failed{% elif error.type == 'timeout' %}warning{% elif error.type == 'memory_limit' %}memory{% else %}failed{% endif %}">
            {% if error.type == 'tamarin_error' %}❌ FAILED :
            {% elif error.type == 'timeout' %}⏳ TIMED OUT :
            {% elif error.type == 'memory_limit' %}🧠 MEMORY LIMIT :
            {% else %}❌ ERROR :
            {% endif %}</span> {{ error.task_name }}</h3>
        <h4>On lemma : {{ error.lemma }}, with tamarin-prover : {{ error.tamarin_version }}</h4>
        <p>{{ error.description }}</p>
        {% if error.stderr_output %}
        <pre><code class="zsh">{{ error.stderr_output }}</code></pre>
        {% endif %}
    </div>
    {% endfor %}

    <h4>Rerun file : <a href="./{{ report_data.rerun_file }}">{{ report_data.rerun_file }}</a></h4>
    {% else %}
    <div class="info">
        <p><strong>✅ No errors encountered in this run</strong></p>
        <p>All tasks completed successfully without any failures, timeouts, or memory limit issues.</p>
    </div>
    {% endif %}

    <hr>
    <footer>
        <p><em>Report generated by Batch Tamarin v{{ version or 'unknown' }} on {{ report_data.generation_date.strftime('%Y-%m-%d at %H:%M:%S') }}</em></p>
    </footer>

    <script>
        mermaid.initialize({
            startOnLoad: true,
            theme: 'default',
            securityLevel: 'loose'
        });
    </script>
</body>

</html>
